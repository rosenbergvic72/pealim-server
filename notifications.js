// notifications.js
import * as Notifications from 'expo-notifications';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { Platform } from 'react-native';

const normalizeLanguageCode = (lang) => {
  switch (lang) {
    case '—Ä—É—Å—Å–∫–∏–π': return 'ru';
    case 'english': return 'en';
    case 'fran√ßais': return 'fr';
    case 'espa√±ol': return 'es';
    case 'portugu√™s': return 'pt';
    case 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©': return 'ar';
    case '·ä†·àõ·à≠·äõ': return 'am';
    default: return 'en';
  }
};

const notificationMessages = {
  ru: {
    title: '–ù–µ –∑–∞–±—É–¥—å –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è!',
    body: '5 –º–∏–Ω—É—Ç –∏–≤—Ä–∏—Ç–∞ —Å–µ–≥–æ–¥–Ω—è ‚Äî —ç—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å! üí™',
  },
  en: {
    title: 'Don‚Äôt forget to practice!',
    body: '5 minutes of Hebrew today = progress! üöÄ',
  },
  fr: {
    title: 'N‚Äôoublie pas de t‚Äôentra√Æner !',
    body: '5 minutes d‚Äôh√©breu aujourd‚Äôhui = du progr√®s ! üìà',
  },
  es: {
    title: '¬°No olvides practicar!',
    body: '5 minutos de hebreo hoy = progreso üìö',
  },
  pt: {
    title: 'N√£o se esque√ßa de praticar!',
    body: '5 minutos de hebraico hoje = progresso üéØ',
  },
  ar: {
    title: 'ŸÑÿß ÿ™ŸÜÿ≥Ÿé ÿßŸÑÿ™ÿØÿ±ÿ®!',
    body: 'Ÿ• ÿØŸÇÿßÿ¶ŸÇ ŸÖŸÜ ÿßŸÑÿπÿ®ÿ±Ÿäÿ© ÿßŸÑŸäŸàŸÖ = ÿ™ŸÇÿØŸëŸÖ! ‚ú®',
  },
  am: {
    title: '·àõ·àµ·â∞·àõ·à≠ ·ä†·âµ·à≠·à≥!',
    body: '·ãõ·ç§·ãÆ 5 ·ã∞·å¢·ä™ ·ãÆ·â•·à≠·ãï·àµ·âµ ·àõ·àõ·à¨·à≠ = ·ä•·ãµ·åà·âµ! üåü',
  },
};

export const initializeNotificationChannel = async () => {
  if (Platform.OS === 'android') {
    await Notifications.setNotificationChannelAsync('default', {
      name: '–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª',
      importance: Notifications.AndroidImportance.HIGH,
      sound: 'default',
    });
    console.log('üì¢ –ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω');
  }
};

export const requestNotificationPermissions = async () => {
  const { status: existingStatus } = await Notifications.getPermissionsAsync();
  let finalStatus = existingStatus;

  if (existingStatus !== 'granted') {
    const { status } = await Notifications.requestPermissionsAsync();
    finalStatus = status;
  }

  if (finalStatus !== 'granted') {
    alert('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã. –í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.');
    return false;
  }

  return true;
};

export const scheduleDailyNotification = async () => {
  const alreadyScheduled = await AsyncStorage.getItem('notificationScheduled');
  if (alreadyScheduled === 'true') {
    console.log('üîÅ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∂–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã, –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
    return;
  }

  await Notifications.cancelAllScheduledNotificationsAsync();

  const rawLang = await AsyncStorage.getItem('language');
  const lang = normalizeLanguageCode(rawLang);
  const message = notificationMessages[lang] || notificationMessages.en;

  const times = [
    { hour: 11, minute: 30 },
    // { hour: 10, minute: 21 },
    // { hour: 10, minute: 22 },
  ];

  for (const time of times) {
    await Notifications.scheduleNotificationAsync({
      content: {
        title: message.title,
        body: message.body,
        sound: 'default',
        channelId: 'default',
      },
      trigger: {
        ...time,
        repeats: true,
      },
    });
  }

  await AsyncStorage.setItem('notificationScheduled', 'true');
  console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —è–∑—ã–∫–µ "${lang}"`);
};

export const cancelNotifications = async () => {
  await Notifications.cancelAllScheduledNotificationsAsync();
  await AsyncStorage.removeItem('notificationScheduled');
  console.log('üö´ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã');
};

export const devTestNotification = async () => {
  console.log('üîß –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ç–µ—Å—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');

  await Notifications.scheduleNotificationAsync({
    content: {
      title: 'üîî –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
      body: '–ï—Å–ª–∏ —Ç—ã —ç—Ç–æ –≤–∏–¥–∏—à—å ‚Äî –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç! üéâ',
      sound: 'default',
      channelId: 'default',
    },
    trigger: {
      seconds: 10,
      repeats: false,
    },
  });

  console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù–û —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥');
};
